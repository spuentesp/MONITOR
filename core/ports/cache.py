from __future__ import annotations

from typing import Any, Protocol


class CachePort(Protocol):
    def get(self, key: str) -> Any | None: ...
    def set(self, key: str, value: Any) -> None: ...
    def clear(self) -> None: ...
    def make_key(self, method: str, params: dict[str, Any]) -> str: ...


class StagingPort(Protocol):
    def stage(self, deltas: dict[str, Any]) -> None: ...
    def flush(self, recorder: Any, clear_after: bool = True) -> dict[str, Any]: ...
    def pending(self) -> int: ...
    def clear(self) -> None: ...
