from __future__ import annotations

from typing import Any, Protocol


class RepoPort(Protocol):
    def connect(self) -> Any: ...
    def close(self) -> None: ...
    def ping(self) -> bool: ...
    def run(self, cypher: str, **params: Any) -> list[dict[str, Any]]: ...
    def bootstrap_constraints(self) -> None: ...


class QueryReadPort(Protocol):
    def entities_in_scene(self, scene_id: str) -> list[dict[str, Any]]: ...
    def entities_in_story(self, story_id: str) -> list[dict[str, Any]]: ...
    def entities_in_universe(self, universe_id: str) -> list[dict[str, Any]]: ...
    def facts_for_scene(self, scene_id: str) -> list[dict[str, Any]]: ...
    def facts_for_story(self, story_id: str) -> list[dict[str, Any]]: ...
    def relations_effective_in_scene(self, scene_id: str) -> list[dict[str, Any]]: ...


class RecorderWritePort(Protocol):
    def commit_deltas(self, **kwargs: Any) -> dict[str, Any]: ...
